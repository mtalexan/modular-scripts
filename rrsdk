#because we want this to change the directory of the invoker, we need to source
#this in the .bashrc and declare it as a shell function
function rrsdk() {

    # setup our variables that might be set by arg parsing
    local SUBDIR=
    local BASEDIR=${HOME}/rrsdk_code_repos
    local ERROR_RET=
    local PERFECT_MATCH=
    local MATCH_DIRS=()
    
    while [ ! -z "$1" ] ; do
        case "$1" in
            "/")
                # a "/" indicates an argument follows that's the subdirectory to navigate to if we
                # change directories
                SUBDIR=$2
                shift
                shift
                ;;
            *)
                # Let the match parsing handle it
                . ~/local/repos/get_dir_match.incl
                ;;
        esac
    done

    if [ ! -z "$ERROR_RET" ] ; then
        if [ $ERROR_RET -eq 2 ] ; then
            #provided search terms, but nothing matched
            echo 1>&2 "No matches found"
            return 2
        elif [ $ERROR_RET -eq 1 ] ; then
            #badly formatted arguments
            echo 1>&2 "Invalid arguments"
            return 1
        fi
    fi
    
    local FULL_DIR=

    # Construct the full path to the specific directory if we can
    if [ ${#MATCH_DIRS[@]} -lt 1 ] ; then
    #found no matches, or had no arguments about matches
        if [ -z "$DEVDIR" ] ; then
            echo 1>&2 'DEVDIR not set, cannot default to $DEVDIR'
            return 1
        else
            FULL_DIR=${DEVDIR}/${SUBDIR}
        fi
    elif [ ! -z "$PERFECT_MATCH" ] ; then
    #only one match for our search terms, or had a perfect match on a non-glob search term
        FULL_DIR=${BASEDIR}/${PERFECT_MATCH}/rrsdk/ksi/${SUBDIR}
    fi

    #have a full path to a specific directory?
    if [ ! -z "$FULL_DIR" ] ; then
        cd ${FULL_DIR}
    else
        echo 1>&2 "Multiple matches found: "
        echo 1>&2 "-----------------------"
        # print each array entry on its own line
        printf '%s\n' "${MATCH_DIRS[@]}" 1>&2
    fi

    return 0
}
